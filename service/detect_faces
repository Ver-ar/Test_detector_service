import cv2



face_cascade = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')

img = cv2.imread('test.jpg')

gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY) #работает с серым, переводим

'''
вывести серое изображение - просто проверить для себя

'''


def viewImage(image, name_of_window):
    cv2.namedWindow(name_of_window, cv2.WINDOW_NORMAL)
    cv2.imshow(name_of_window, image)

viewImage(gray, 'gray_image') 




faces = face_cascade.detectMultiScale(gray, 1.1, 7) 

'''

cv2.CascadeClassifier.detectMultiScale(image[, scaleFactor[, minNeighbors[, flags[, minSize[, maxSize]]]]])

image : Матрица типа CV_8U, содержащая изображение, на котором обнаружены объекты.
scaleFactor :  Некоторые лица могут быть больше других, поскольку находятся ближе, чем остальные. Этот параметр компенсирует перспективу(насколько крупнее лица, чем в натренированной модели мы можем искать)
minNeighbors : Алгоритм распознавания использует скользящее окно во время распознавания объектов. Параметр minNeighbors определяет количество объектов вокруг лица. 
То есть чем больше значение этого параметра, тем больше аналогичных объектов необходимо алгоритму, чтобы он определил текущий объект, как лицо. 
Слишком маленькое значение увеличит количество ложных срабатываний, а слишком большое сделает алгоритм более требовательным.
flags : Параметр с тем же значением для старого каскада, что и в функции cvHaarDetectObjects. Он не используется для нового каскада.
minSize : минимально возможный размер объекта. Объекты меньшего размера игнорируются.
maxSize : максимально возможный размер объекта. Объекты большего размера игнорируются.
Если лица найдены, он возвращает положения обнаруженных лиц как Rect (x, y, w, h).

'''
print(f'Высота изображения: {str(img.shape[0])}')
print(f'Ширина изображения: {str(img.shape[1])}')
 


for (x, y, w, h) in faces:
    cv2.rectangle (img, (x, y), (x+w, y+h), (0, 255, 0), 2)


def count_faces():    
    count = len(faces)
    return(count)

print(f'Количество лиц на фото: {count_faces()}')

cv2.imshow('img', img)

cv2.waitKey(0)
